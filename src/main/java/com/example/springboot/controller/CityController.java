package com.example.springboot.controller;
import com.example.springboot.model.City;
import com.example.springboot.repository.CityRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.Collection;
import java.util.List;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/index") // This means URL's start with /demo (after Application path)
public class CityController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CityRepository cityRepository;

    @GetMapping(path = "/allCities")
    public @ResponseBody
    Iterable<String> getAllCountriesNames() {
        // This returns a JSON or XML with the users
        Collection<String> citiesList =  cityRepository.getAllCities();
        return citiesList;
    }

    @GetMapping(path = "/allCitiesByCountryId")
    public @ResponseBody
    Iterable<String> getAllCitiesByCountryId(@RequestParam int id) {
        // This returns a JSON or XML with the users
        Collection<String> citiesList =  cityRepository.getAllCitiesByCountryId(id);
        return citiesList;
    }

    @GetMapping(path = "/register2")
    public String showForm(Model model) {
        City city = new City();
        model.addAttribute("city", city);

        List<String> cityList = (List<String>) cityRepository.getAllCities();
        model.addAttribute("cityList", cityList);

        return "register_form";
    }
}